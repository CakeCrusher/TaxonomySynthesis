name: CI

permissions:
  contents: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          cd taxonomy-synthesis
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run pre-commit hooks
        run: |
          cd taxonomy-synthesis
          poetry run pre-commit run --all-files

      - name: Run tests with pytest
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cd taxonomy-synthesis
          poetry run pytest

      - name: Calculate new version
        id: version
        run: |
          cd taxonomy-synthesis
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          current_version=$(poetry version -s)
          echo "Current version: $current_version"
          new_version=$(echo $current_version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "New version: $new_version"
          echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT

      - name: Bump version
        if: startsWith(github.ref, 'refs/heads/')
        run: |
          cd taxonomy-synthesis
          poetry version patch
          new_version=$(poetry version -s)
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
      
      - name: Commit and push changes
        if: startsWith(github.ref, 'refs/heads/')
        run: |
          cd taxonomy-synthesis
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add pyproject.toml
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git tag v${{ env.NEW_VERSION }}
          git push "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD:${GITHUB_REF}
          git push "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" v${{ env.NEW_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Publish to PyPI
        if: github.event_name == 'push'
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          cd taxonomy-synthesis
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry build
          poetry publish